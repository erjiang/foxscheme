(letrec
  ((iterate (lambda (x1 y1 vx1 vy1 x2 y2 vx2 vy2 steps)
              (if (= steps 0)
                  (+ x1 x2)
                  (let ((dx (- x2 x1))
                        (dy (- y2 y1)))
                    (let ((d2 (+ (* dx dx) (* dy dy))))
                      (let ((f (/ 1 d2)))
                        (let ((ax (* f dx))
                              (ay (* f dy)))
                          (let ((bx (- ax))
                                (by (- ay)))
                            (iterate (+ x1 vx1)
                                     (+ y1 vy1)
                                     (+ vx1 ax)
                                     (+ vy1 ay)
                                     (+ x2 vx2)
                                     (+ y2 vy2)
                                     (+ vx2 bx)
                                     (+ vy2 by)
                                     (- steps 1))))))))))
  )
  (iterate 0 0 0 1 1 0 0 -1 1000000))
